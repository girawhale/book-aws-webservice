plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' // 스프링 부트의 의존성 관리
}

group 'com.book'
version '1.0-SNAPSHOT-' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

repositories { // 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정함
    mavenCentral() // 가장 많이 사용하는 저장소. 본인이 만든 라이브러리를 업로드하기 어려움
    jcenter() // 라이브러리 업로드가 간단. jcenter에 라이브러리를 업로드하면 mavenCenter에도 업로드될 수 있도록 설정 가능
}

dependencies { // 의존성 선언
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Data JPA 추상화 라이브러리
    implementation 'com.h2database:h2' // 인메모리 관계형 데이터베이스. 별도의 설치가 필요없고 의존성 만으로 관리 가능. 메모리에서 실행되어 재시작마다 초기화(테스트용)
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    // mustache
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // 소셜 기능 구현시 필요

    implementation 'org.springframework.session:spring-session-jdbc' // session을 DB에 저장

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Spring Security 테스트를 위한 도구
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

// Junit5
test {
    useJUnitPlatform()
}